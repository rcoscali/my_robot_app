#!/usr/bin/env node

/**
 * Module dependencies.
 */

var keystoredb = require('../db');
var debug = require('debug')('myapp:*');
var fs = require('fs');

/**
 * Delete SQLite DB File
 */

console.log('initdb: argc = '+process.argv.length+' ...');
console.log('initdb: argv['+(process.argv.length - 1)+'] = '+process.argv[(process.argv.length - 1)]+' ...');
if (process.argv[(process.argv.length - 1)] == "--init-db")
{
    /* SQLite DB file path */
    var sqlitedb_filepath = process.env.HOME + '\\AppData\\Local\\myapp\\keystore.db';
    
    /* Delete the file */
    console.log('Deleting DB file '+sqlitedb_filepath+' ...');
    fs.unlink(sqlitedb_filepath, (err) => {
	if (err && (err.code != 'ENOENT' || err.errno != -4058))
	    throw err;
	else if (err && err.code == 'ENOENT' && err.errno == -4058)
	    console.log('Delete DB file: no such file or directory: done!');
	else
	    console.log('Delete DB file: done!');

	console.log('initdb: open DB ...');
	db = keystoredb.openDb();
	db.serialize(() =>
	    {
		/* Create tables & records for initializing DB */
		console.log("initdb: Creating tables schema in DB ...");
		db.run("PRAGMA foreign_keys = ON")
		db.run("CREATE TABLE IF NOT EXISTS Keys     (KeyId       INTEGER NOT NULL PRIMARY KEY, \
                                                             Key         TEXT    NOT NULL, \
                                                             ExchangeId  INTEGER NOT NULL, \
                                                             Secret      TEXT    NOT NULL, \
                                                             FOREIGN KEY (ExchangeId) REFERENCES Exchanges (Id), \
                                                                     UNIQUE(Key) \
                                                            )");
		db.run("CREATE TABLE IF NOT EXISTS Exchanges (Id         INTEGER NOT NULL PRIMARY KEY, \
                                                              Name       TEXT    NOT NULL, \
                                                              Url        TEXT    NOT NULL, \
                                                              Subaccount TEXT, \
                                                                         UNIQUE(Name) \
                                                             )");
		console.log("initdb: Tables schema created in DB!");
		console.log("initdb: Adding exchange records in DB ...");
		db.run("INSERT INTO Exchanges (Name, Url, Subaccount) \
                               VALUES ('ftx', 'https://ftx.com/', 'napbots'), \
                                      ('binance', 'https://binance.com/', ''), \
                                      ('kraken', 'https://kraken.com/', '');");
		console.log("initdb: Exchange records in DB added!");
	    }
	);
    });
}
else if (process.argv[(process.argv.length - 1)] == "--dump-db")
else {
    console.log('keystoredb: invalid arg: argv['+(process.argv.length - 1)+'] = '+process.argv[(process.argv.length - 1)]+' ...');
}
